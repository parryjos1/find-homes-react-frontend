{"ast":null,"code":"var _jsxFileName = \"/Users/joshparry/sei/projects/project-2/react-frontend-project2/project2-frontend/src/MapContainer.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\nimport SearchSelectedArea from './SearchSelectedArea';\nimport DisplayProperties from './DisplayProperties';\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, text); // const testMarkerArray = [{lat: -33.8659 , lng: 151.2117}, {lat: -33.8670 , lng: 151.2100}]\n\n\nconst testMarkerArray = [];\n\nrequire('dotenv').config();\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY2; // console.log('API KEY', API_KEY, process.env);\n\n/* Stack-based Douglas Peucker line simplification routine\n   returned is a reduced GLatLng array\n   After code by  Dr. Gary J. Robinson,\n   Environmental Systems Science Centre,\n   University of Reading, Reading, UK\n\n   http://www.bdcc.co.uk/Gmaps/GDouglasPeuker.js\n*/\n// Douglasâ€“Peucker algorithm (https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm)\n// used to return an array of the polygon points based on lines drawn\n\nfunction GDouglasPeucker(source, kink)\n/* source[] Input coordinates in GLatLngs \t*/\n\n/* kink\tin metres, kinks above this depth kept  */\n\n/* kink depth is the height of the triangle abc where a-b and b-c are two consecutive line segments */\n{\n  var n_source, n_stack, n_dest, start, end, i, sig;\n  var dev_sqr, max_dev_sqr, band_sqr;\n  var x12, y12, d12, x13, y13, d13, x23, y23, d23;\n  var F = Math.PI / 180.0 * 0.5;\n  var index = new Array();\n  /* aray of indexes of source points to include in the reduced line */\n\n  var sig_start = new Array();\n  /* indices of start & end of working section */\n\n  var sig_end = new Array();\n  /* check for simple cases */\n\n  if (source.length < 3) return source;\n  /* one or two points */\n\n  /* more complex case. initialize stack */\n\n  n_source = source.length;\n  band_sqr = kink * 360.0 / (2.0 * Math.PI * 6378137.0);\n  /* Now in degrees */\n\n  band_sqr *= band_sqr;\n  n_dest = 0;\n  sig_start[0] = 0;\n  sig_end[0] = n_source - 1;\n  n_stack = 1;\n  /* while the stack is not empty  ... */\n\n  while (n_stack > 0) {\n    /* ... pop the top-most entries off the stacks */\n    start = sig_start[n_stack - 1];\n    end = sig_end[n_stack - 1];\n    n_stack--;\n\n    if (end - start > 1) {\n      /* any intermediate points ? */\n\n      /* ... yes, so find most deviant intermediate point to\n             either side of line joining start & end points */\n      x12 = source[end].lng() - source[start].lng();\n      y12 = source[end].lat() - source[start].lat();\n      if (Math.abs(x12) > 180.0) x12 = 360.0 - Math.abs(x12);\n      x12 *= Math.cos(F * (source[end].lat() + source[start].lat()));\n      /* use avg lat to reduce lng */\n\n      d12 = x12 * x12 + y12 * y12;\n\n      for (i = start + 1, sig = start, max_dev_sqr = -1.0; i < end; i++) {\n        x13 = source[i].lng() - source[start].lng();\n        y13 = source[i].lat() - source[start].lat();\n        if (Math.abs(x13) > 180.0) x13 = 360.0 - Math.abs(x13);\n        x13 *= Math.cos(F * (source[i].lat() + source[start].lat()));\n        d13 = x13 * x13 + y13 * y13;\n        x23 = source[i].lng() - source[end].lng();\n        y23 = source[i].lat() - source[end].lat();\n        if (Math.abs(x23) > 180.0) x23 = 360.0 - Math.abs(x23);\n        x23 *= Math.cos(F * (source[i].lat() + source[end].lat()));\n        d23 = x23 * x23 + y23 * y23;\n        if (d13 >= d12 + d23) dev_sqr = d23;else if (d23 >= d12 + d13) dev_sqr = d13;else dev_sqr = (x13 * y12 - y13 * x12) * (x13 * y12 - y13 * x12) / d12; // solve triangle\n\n        if (dev_sqr > max_dev_sqr) {\n          sig = i;\n          max_dev_sqr = dev_sqr;\n        }\n      }\n\n      if (max_dev_sqr < band_sqr) {\n        /* is there a sig. intermediate point ? */\n\n        /* ... no, so transfer current start point */\n        index[n_dest] = start;\n        n_dest++;\n      } else {\n        /* ... yes, so push two sub-sections on stack for further processing */\n        n_stack++;\n        sig_start[n_stack - 1] = sig;\n        sig_end[n_stack - 1] = end;\n        n_stack++;\n        sig_start[n_stack - 1] = start;\n        sig_end[n_stack - 1] = sig;\n      }\n    } else {\n      /* ... no intermediate points, so transfer current start point */\n      index[n_dest] = start;\n      n_dest++;\n    }\n  }\n  /* transfer last point */\n\n\n  index[n_dest] = n_source - 1;\n  n_dest++;\n  /* make return array */\n\n  var r = new Array();\n\n  for (var i = 0; i < n_dest; i++) r.push(source[index[i]]);\n\n  return r;\n}\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\nexport default class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDomainToken = () => {\n      const railsDomainTokenRequest = axios.get(\"https://find-homes.herokuapp.com/domain_token\").then(result => {\n        console.log(\"The result is: \".concat(result));\n        this.setState({\n          domain_token: result.data\n        });\n      });\n      console.log(\"railsDomainTokenRequest is: \".concat(railsDomainTokenRequest));\n      return railsDomainTokenRequest;\n    };\n\n    this.handleApiLoaded = ({\n      map,\n      maps\n    }) => {\n      console.log('LOADED', map, maps); // debugger;\n\n      this.setState({\n        map: map,\n        maps: maps\n      });\n    };\n\n    this.freeDrawMouseDown = () => {\n      //the polygon\n      let poly = new this.state.maps.Polyline({\n        map: this.state.map,\n        clickable: false\n      }); //move-listener\n\n      let move = this.state.maps.event.addListener(this.state.map, 'mousemove', function (e) {\n        poly.getPath().push(e.latLng);\n      });\n      const that = this; //mouseup-listener\n\n      this.state.maps.event.addListenerOnce(this.state.map, 'mouseup', function (e) {\n        that.state.maps.event.removeListener(move);\n        var path = poly.getPath(); // what is this? and how does it know where the path has moved\n\n        poly.setMap(null); //?*?\n        // Gets the path of the mouse movements but why is that on the mouse up?\n\n        var theArrayofLatLng = path.j; // What is path.j? ?*?\n\n        var arrayforPolygontoUse = GDouglasPeucker(theArrayofLatLng, 50);\n        console.log(\"ArrayforPolygontoUse\", arrayforPolygontoUse); // By this point, you will have the array of lat/lng coordinates, which you can\n        // save into state:\n\n        const searchPath = arrayforPolygontoUse.map(pos => ({\n          lat: pos.lat(),\n          lon: pos.lng()\n        })); // const searchPath = arrayforPolygontoUse.map( pos => [ pos.lat(), pos.lng() ] );\n\n        that.setState({\n          searchAreaPath: searchPath\n        });\n        console.log('path', searchPath);\n        var polyOptions = {\n          map: that.state.map,\n          fillColor: '#0099FF',\n          fillOpacity: 0.7,\n          strokeColor: '#AA2143',\n          strokeWeight: 2,\n          clickable: false,\n          zIndex: 1,\n          path: arrayforPolygontoUse,\n          editable: false\n        };\n        poly = new that.state.maps.Polygon(polyOptions);\n        that.state.maps.event.clearListeners(that.state.map.getDiv(), 'mousedown');\n        that.state.map.setOptions({\n          draggable: true,\n          zoomControl: true,\n          scrollwheel: true,\n          disableDoubleClickZoom: true\n        });\n      }); // mouseup-handler\n    };\n\n    this.freeDraw = event => {\n      // ?*? what is map.setOptions?\n      this.state.map.setOptions({\n        draggable: false,\n        zoomControl: false,\n        scrollwheel: false,\n        disableDoubleClickZoom: false\n      });\n      this.state.maps.event.addDomListener(this.state.map.getDiv(), 'mousedown', this.freeDrawMouseDown);\n    };\n\n    this.selectedPropCallBack = e => {\n      console.log(\"~~~~e is: \".concat(e));\n      this.setState({\n        selectedPropertyLocations: e\n      });\n    };\n\n    this.state = {\n      map: null,\n      maps: null,\n      searchAreaPath: [],\n      domain_token: '',\n      selectedPropertyLocations: [],\n      bedrooms: 0,\n      bathrooms: 0,\n      max_price: 100000000,\n      suburb: ''\n    };\n  } // Sydney City Lat & Lng for default\n\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    // get's domain token from rails database\n    this.getDomainToken();\n  } // gets domain token by making an axios request to the rails server which runs the logic to       generate a token\n  // the results of axios query is then saved to state\n\n\n  // Upon submitting suburb form route to SearchedShowListing Route and pass along these state. Can be found under: history > location > staten >\n  submitForm(e) {\n    e.preventDefault();\n    this.props.history.push({\n      pathname: '/searchlistings',\n      state: {\n        bedrooms: this.state.bedrooms,\n        bathrooms: this.state.bathrooms,\n        max_price: this.state.max_price,\n        suburb: this.state.suburb,\n        domainToken: this.state.domain_token.data\n      }\n    });\n  } //submitForm()\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: '100vh',\n        width: '90%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitForm.bind(this),\n      bedrooms: this.state.bedrooms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Search Suburb:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"suburb\",\n      value: this.state.value,\n      placeholder: \" 'Glebe'\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Min Bedrooms:\", React.createElement(\"select\", {\n      value: this.state.bedrooms,\n      name: \"bedrooms\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"4\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Min Bathrooms:\", React.createElement(\"select\", {\n      value: this.state.bathrooms,\n      name: \"bathrooms\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"4\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Max Price:\", React.createElement(\"select\", {\n      value: this.state.max_price,\n      name: \"max_price\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"option\", {\n      value: \"1000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"1,000,000\"), React.createElement(\"option\", {\n      value: \"2000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"2,000,000\"), React.createElement(\"option\", {\n      value: \"3000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"3,000,000\"), React.createElement(\"option\", {\n      value: \"5000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"5,000,000\")))), React.createElement(\"button\", {\n      onClick: this.freeDraw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Draw area\"), React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: API_KEY\n      },\n      defaultCenter: this.props.center,\n      defaultZoom: this.props.zoom,\n      onGoogleApiLoaded: this.handleApiLoaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, this.state.selectedPropertyLocations.length > 0 ? this.state.selectedPropertyLocations.map(p => React.createElement(AnyReactComponent, {\n      lat: p.listing.propertyDetails.latitude,\n      lng: p.listing.propertyDetails.longitude,\n      text: React.createElement(Link, {\n        to: \"/listing/\".concat(p.listing.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"X\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), this.state.searchAreaPath.length > 0 ? React.createElement(DisplayProperties, {\n      polygonDrawn: this.state.searchAreaPath,\n      domainToken: this.state.domain_token,\n      selectedPropCallBack: this.selectedPropCallBack,\n      bedrooms: this.state.bedrooms,\n      bathrooms: this.state.bathrooms,\n      maxPrice: this.state.max_price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Select an area on the map to search\"));\n  }\n\n} // End of MapContainer\n// ``````~~~~~~ How MapContainer works  ~~~~~~~~~```````\n\n/*\n\n1. A Map is rendered on the Page from the Google Map Component\n    - GoogleMapReact is a google map library google-map-react (https://github.com/google-map-react/google-map-react)\n    - it allows you to render any google react component on the google map\n    - ?*? what does the handleApiLoaded function do?\n\n2. FreeDraw function allows you to draw on the Google map\n    -   FreeDraw() is called on the OnClick function of the button\n    -\n3.\n\nDo something you're so good at\n\n*/\n\nMapContainer.defaultProps = {\n  center: {\n    lat: -33.8708,\n    lng: 200\n  },\n  zoom: 15\n};","map":{"version":3,"sources":["/Users/joshparry/sei/projects/project-2/react-frontend-project2/project2-frontend/src/MapContainer.jsx"],"names":["React","Component","Link","axios","GoogleMapReact","SearchSelectedArea","DisplayProperties","AnyReactComponent","text","testMarkerArray","require","config","API_KEY","process","env","REACT_APP_GOOGLE_MAPS_API_KEY2","GDouglasPeucker","source","kink","n_source","n_stack","n_dest","start","end","i","sig","dev_sqr","max_dev_sqr","band_sqr","x12","y12","d12","x13","y13","d13","x23","y23","d23","F","Math","PI","index","Array","sig_start","sig_end","length","lng","lat","abs","cos","r","push","mapStyles","width","height","MapContainer","constructor","props","getDomainToken","railsDomainTokenRequest","get","then","result","console","log","setState","domain_token","data","handleApiLoaded","map","maps","freeDrawMouseDown","poly","state","Polyline","clickable","move","event","addListener","e","getPath","latLng","that","addListenerOnce","removeListener","path","setMap","theArrayofLatLng","j","arrayforPolygontoUse","searchPath","pos","lon","searchAreaPath","polyOptions","fillColor","fillOpacity","strokeColor","strokeWeight","zIndex","editable","Polygon","clearListeners","getDiv","setOptions","draggable","zoomControl","scrollwheel","disableDoubleClickZoom","freeDraw","addDomListener","selectedPropCallBack","selectedPropertyLocations","bedrooms","bathrooms","max_price","suburb","handleChange","target","name","value","componentDidMount","submitForm","preventDefault","history","pathname","domainToken","render","bind","key","center","zoom","p","listing","propertyDetails","latitude","longitude","id","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport GoogleMapReact from 'google-map-react';\nimport SearchSelectedArea from './SearchSelectedArea'\nimport DisplayProperties from './DisplayProperties'\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\n// const testMarkerArray = [{lat: -33.8659 , lng: 151.2117}, {lat: -33.8670 , lng: 151.2100}]\nconst testMarkerArray = []\n\nrequire('dotenv').config();\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY2;\n// console.log('API KEY', API_KEY, process.env);\n\n/* Stack-based Douglas Peucker line simplification routine\n   returned is a reduced GLatLng array\n   After code by  Dr. Gary J. Robinson,\n   Environmental Systems Science Centre,\n   University of Reading, Reading, UK\n\n   http://www.bdcc.co.uk/Gmaps/GDouglasPeuker.js\n*/\n\n// Douglasâ€“Peucker algorithm (https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm)\n// used to return an array of the polygon points based on lines drawn\nfunction GDouglasPeucker (source, kink)\n/* source[] Input coordinates in GLatLngs \t*/\n/* kink\tin metres, kinks above this depth kept  */\n/* kink depth is the height of the triangle abc where a-b and b-c are two consecutive line segments */\n{\n    var\tn_source, n_stack, n_dest, start, end, i, sig;\n    var dev_sqr, max_dev_sqr, band_sqr;\n    var x12, y12, d12, x13, y13, d13, x23, y23, d23;\n    var F = ((Math.PI / 180.0) * 0.5 );\n    var index = new Array(); /* aray of indexes of source points to include in the reduced line */\n\tvar sig_start = new Array(); /* indices of start & end of working section */\n    var sig_end = new Array();\n\n    /* check for simple cases */\n\n    if ( source.length < 3 )\n        return(source);    /* one or two points */\n\n    /* more complex case. initialize stack */\n\n\tn_source = source.length;\n    band_sqr = kink * 360.0 / (2.0 * Math.PI * 6378137.0);\t/* Now in degrees */\n    band_sqr *= band_sqr;\n    n_dest = 0;\n    sig_start[0] = 0;\n    sig_end[0] = n_source-1;\n    n_stack = 1;\n\n    /* while the stack is not empty  ... */\n    while ( n_stack > 0 ){\n\n        /* ... pop the top-most entries off the stacks */\n\n        start = sig_start[n_stack-1];\n        end = sig_end[n_stack-1];\n        n_stack--;\n\n        if ( (end - start) > 1 ){  /* any intermediate points ? */\n\n                /* ... yes, so find most deviant intermediate point to\n                       either side of line joining start & end points */\n\n            x12 = (source[end].lng() - source[start].lng());\n            y12 = (source[end].lat() - source[start].lat());\n            if (Math.abs(x12) > 180.0)\n                x12 = 360.0 - Math.abs(x12);\n            x12 *= Math.cos(F * (source[end].lat() + source[start].lat()));/* use avg lat to reduce lng */\n            d12 = (x12*x12) + (y12*y12);\n\n            for ( i = start + 1, sig = start, max_dev_sqr = -1.0; i < end; i++ ){\n\n                x13 = (source[i].lng() - source[start].lng());\n                y13 = (source[i].lat() - source[start].lat());\n                if (Math.abs(x13) > 180.0)\n                    x13 = 360.0 - Math.abs(x13);\n                x13 *= Math.cos (F * (source[i].lat() + source[start].lat()));\n                d13 = (x13*x13) + (y13*y13);\n\n                x23 = (source[i].lng() - source[end].lng());\n                y23 = (source[i].lat() - source[end].lat());\n                if (Math.abs(x23) > 180.0)\n                    x23 = 360.0 - Math.abs(x23);\n                x23 *= Math.cos(F * (source[i].lat() + source[end].lat()));\n                d23 = (x23*x23) + (y23*y23);\n\n                if ( d13 >= ( d12 + d23 ) )\n                    dev_sqr = d23;\n                else if ( d23 >= ( d12 + d13 ) )\n                    dev_sqr = d13;\n                else\n                    dev_sqr = (x13 * y12 - y13 * x12) * (x13 * y12 - y13 * x12) / d12;// solve triangle\n\n                if ( dev_sqr > max_dev_sqr  ){\n                    sig = i;\n                    max_dev_sqr = dev_sqr;\n                }\n            }\n\n            if ( max_dev_sqr < band_sqr ){   /* is there a sig. intermediate point ? */\n                /* ... no, so transfer current start point */\n                index[n_dest] = start;\n                n_dest++;\n            }\n            else{\n                /* ... yes, so push two sub-sections on stack for further processing */\n                n_stack++;\n                sig_start[n_stack-1] = sig;\n                sig_end[n_stack-1] = end;\n                n_stack++;\n                sig_start[n_stack-1] = start;\n                sig_end[n_stack-1] = sig;\n            }\n        }\n        else{\n                /* ... no intermediate points, so transfer current start point */\n                index[n_dest] = start;\n                n_dest++;\n        }\n    }\n\n    /* transfer last point */\n    index[n_dest] = n_source-1;\n    n_dest++;\n\n    /* make return array */\n    var r = new Array();\n    for(var i=0; i < n_dest; i++)\n        r.push(source[index[i]]);\n    return r;\n\n}\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%',\n};\n\nexport default class MapContainer extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      map: null,\n      maps: null,\n      searchAreaPath: [],\n      domain_token: '',\n      selectedPropertyLocations: [],\n      bedrooms: 0,\n      bathrooms: 0,\n      max_price: 100000000,\n      suburb: '',\n    };\n\n  }\n\n  // Sydney City Lat & Lng for default\n  static defaultProps = {\n    center: {\n      lat: -33.8708,\n      lng: 200\n    },\n    zoom: 15\n  };\n\n  handleChange(e) {\n     this.setState({ [e.target.name] : e.target.value });\n  }\n\n  componentDidMount() {\n\n    // get's domain token from rails database\n    this.getDomainToken();\n\n  }\n\n  // gets domain token by making an axios request to the rails server which runs the logic to       generate a token\n  // the results of axios query is then saved to state\n  getDomainToken = () => {\n     const railsDomainTokenRequest = axios.get(\"https://find-homes.herokuapp.com/domain_token\").then(result => {\n       console.log(`The result is: ${result}`);\n       this.setState({domain_token: result.data})\n     })\n     console.log(`railsDomainTokenRequest is: ${railsDomainTokenRequest}`);\n     return railsDomainTokenRequest\n  }\n\n  // ?*? what is this function do what is map and what is maps?\n  handleApiLoaded = ({map, maps}) => {\n    console.log('LOADED', map, maps);\n    // debugger;\n    this.setState({\n      map: map,\n      maps: maps\n    });\n  }\n\n  freeDrawMouseDown = () => {\n\n    //the polygon\n    let poly = new this.state.maps.Polyline({map:this.state.map,clickable:false});\n\n    //move-listener\n    let move=this.state.maps.event.addListener(this.state.map,'mousemove',function(e){\n        poly.getPath().push(e.latLng);\n    });\n\n\n    const that = this;\n\n    //mouseup-listener\n    this.state.maps.event.addListenerOnce(this.state.map,'mouseup',function(e){\n\n        that.state.maps.event.removeListener(move);\n        var path=poly.getPath(); // what is this? and how does it know where the path has moved\n        poly.setMap(null);\n\n        //?*?\n        // Gets the path of the mouse movements but why is that on the mouse up?\n        var theArrayofLatLng = path.j; // What is path.j? ?*?\n        var arrayforPolygontoUse= GDouglasPeucker(theArrayofLatLng,50);\n        console.log(\"ArrayforPolygontoUse\", arrayforPolygontoUse);\n\n        // By this point, you will have the array of lat/lng coordinates, which you can\n        // save into state:\n        const searchPath = arrayforPolygontoUse.map( pos => ({ lat: pos.lat(), lon: pos.lng() }) );\n        // const searchPath = arrayforPolygontoUse.map( pos => [ pos.lat(), pos.lng() ] );\n\n        that.setState({\n          searchAreaPath:  searchPath\n        });\n\n        console.log('path', searchPath);\n\n\n        var polyOptions = {\n            map: that.state.map,\n            fillColor: '#0099FF',\n            fillOpacity: 0.7,\n            strokeColor: '#AA2143',\n            strokeWeight: 2,\n            clickable: false,\n            zIndex: 1,\n            path: arrayforPolygontoUse,\n            editable: false\n        }\n\n        poly=new that.state.maps.Polygon(polyOptions);\n\n        that.state.maps.event.clearListeners(that.state.map.getDiv(), 'mousedown');\n\n        that.state.map.setOptions({\n            draggable: true,\n            zoomControl: true,\n            scrollwheel: true,\n            disableDoubleClickZoom: true\n        });\n\n    });  // mouseup-handler\n\n  } //freeDrawMouseDown()\n\n  freeDraw = (event) => {\n    // ?*? what is map.setOptions?\n    this.state.map.setOptions({\n        draggable: false,\n        zoomControl: false,\n        scrollwheel: false,\n        disableDoubleClickZoom: false\n    });\n\n\n    this.state.maps.event.addDomListener(this.state.map.getDiv(), 'mousedown', this.freeDrawMouseDown);\n\n  } //freeDraw()\n\n  selectedPropCallBack = (e) => {\n    console.log(`~~~~e is: ${e}`);\n    this.setState({selectedPropertyLocations: e})\n  }\n\n  // Upon submitting suburb form route to SearchedShowListing Route and pass along these state. Can be found under: history > location > staten >\n  submitForm (e) {\n    e.preventDefault()\n\n    this.props.history.push({\n      pathname: '/searchlistings',\n      state: {\n        bedrooms: this.state.bedrooms,\n        bathrooms: this.state.bathrooms,\n        max_price: this.state.max_price,\n        suburb: this.state.suburb,\n        domainToken: this.state.domain_token.data\n      }\n    })\n  } //submitForm()\n\n\n  render(){\n\n\n    return (\n      <div style={{ height: '100vh', width: '90%' }}>\n\n         <form onSubmit={this.submitForm.bind(this)} bedrooms={this.state.bedrooms}>\n           <label>\n\n             Search Suburb:\n             <input type=\"text\" name=\"suburb\" value={this.state.value} placeholder=\" 'Glebe'\" onChange={this.handleChange.bind(this)} />\n\n           </label>\n\n           <input type=\"submit\" value=\"Search\" />\n         </form>\n\n       <div>\n         <label>\n           Min Bedrooms:\n           <select value={this.state.bedrooms} name='bedrooms' onChange={this.handleChange.bind(this)}>\n             <option value='0'>0</option>\n             <option value='1'>1</option>\n             <option value=\"2\">2</option>\n             <option value=\"3\">3</option>\n             <option value=\"4\">4</option>\n           </select>\n         </label>\n         <label>\n           Min Bathrooms:\n           <select value={this.state.bathrooms} name='bathrooms' onChange={this.handleChange.bind(this)}>\n             <option value='0'>0</option>\n             <option value='1'>1</option>\n             <option value=\"2\">2</option>\n             <option value=\"3\">3</option>\n             <option value=\"4\">4</option>\n           </select>\n         </label>\n         <label>\n           Max Price:\n           <select value={this.state.max_price} name='max_price' onChange={this.handleChange.bind(this)}>\n             <option value=\"\">-</option>\n             <option value=\"1000000\">1,000,000</option>\n             <option value=\"2000000\">2,000,000</option>\n             <option value=\"3000000\">3,000,000</option>\n             <option value=\"5000000\">5,000,000</option>\n           </select>\n         </label>\n\n       </div>\n\n\n\n       <button onClick={this.freeDraw}>Draw area</button>\n\n\n\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: API_KEY }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n           onGoogleApiLoaded={this.handleApiLoaded}\n        >\n\n\n\n\n      {\n        this.state.selectedPropertyLocations.length > 0\n        ?\n         this.state.selectedPropertyLocations.map(p =>\n        <AnyReactComponent\n          lat={p.listing.propertyDetails.latitude}\n          lng={p.listing.propertyDetails.longitude}\n          text= <Link to={`/listing/${p.listing.id}`}><strong>X</strong></Link>\n        />\n      )\n      :\n      <p></p>\n    }\n\n\n      </GoogleMapReact>\n      {\n        this.state.searchAreaPath.length > 0\n        ?\n       <DisplayProperties polygonDrawn={this.state.searchAreaPath} domainToken={this.state.domain_token} selectedPropCallBack={this.selectedPropCallBack} bedrooms={this.state.bedrooms} bathrooms={this.state.bathrooms} maxPrice={this.state.max_price}/>\n       :\n       <p>Select an area on the map to search</p>\n      }\n     </div>\n   );\n }\n} // End of MapContainer\n\n\n// ``````~~~~~~ How MapContainer works  ~~~~~~~~~```````\n/*\n\n1. A Map is rendered on the Page from the Google Map Component\n    - GoogleMapReact is a google map library google-map-react (https://github.com/google-map-react/google-map-react)\n    - it allows you to render any google react component on the google map\n    - ?*? what does the handleApiLoaded function do?\n\n2. FreeDraw function allows you to draw on the Google map\n    -   FreeDraw() is called on the OnClick function of the button\n    -\n3.\n\nDo something you're so good at\n\n*/\n"]},"metadata":{},"sourceType":"module"}