{"ast":null,"code":"var _jsxFileName = \"/Users/joshparry/sei/projects/project-2/react-frontend-project2/project2-frontend/src/SearchedShowListings.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass SearchedShowListings extends Component {\n  constructor() {\n    super();\n\n    this.updateState = () => {\n      this.setState({\n        domainToken: this.props.history.location.state.domainToken,\n        bedrooms: this.props.history.location.state.bedrooms,\n        bathrooms: this.props.history.location.state.bathrooms,\n        max_price: this.props.history.location.state.max_price,\n        suburb: this.props.history.location.state.suburb\n      });\n    };\n\n    this.searchListings = accessToken => {\n      console.log(\"the access token is: \".concat(accessToken));\n      const tk = this.state.domainToken;\n      console.log(\"tk isssss: \".concat(tk));\n      return axios.post(\"https://api.domain.com.au/v1/listings/residential/_search\", {\n        \"minBedrooms\": this.state.bedrooms,\n        \"minBathrooms\": this.state.bathrooms,\n        \"maxPrice\": this.state.max_price,\n        \"locations\": [{\n          \"suburb\": this.state.suburb\n        }]\n      }, {\n        headers: {\n          'Authorization': \"Bearer \".concat(accessToken)\n        }\n      }).then(result => {\n        const data = result.data;\n        console.log('hello array: searchedShowListings', data);\n        this.setState({\n          propertyResults: data\n        }); // this.props.selectedPropCallBack(data)\n      }).catch(err => console.error(err.response.data));\n    };\n\n    this.state = {\n      propertyResults: '',\n      domainToken: ''\n    };\n  } // Method to pull data passed down when we routed to the state\n\n\n  // Updates the state before any HTML is rendered\n  componentWillMount() {\n    this.updateState();\n  }\n\n  componentDidMount() {\n    this.searchListings(this.state.domainToken);\n  } // Query the Domain Database based on search critera\n\n\n  // end of searchListing\n  render() {\n    return React.createElement(\"div\", {\n      className: \"component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Listings\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.propertyResults.length > 0 ? this.state.propertyResults.map(p => React.createElement(Link, {\n      to: \"/listing/\".concat(p.listing.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"listings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: p.listing.id,\n      className: \"listings-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, p.listing.propertyDetails.displayableAddress), React.createElement(\"div\", {\n      className: \"listings-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: p.listing.media[0].url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default SearchedShowListings;","map":{"version":3,"sources":["/Users/joshparry/sei/projects/project-2/react-frontend-project2/project2-frontend/src/SearchedShowListings.jsx"],"names":["React","Component","Link","axios","SearchedShowListings","constructor","updateState","setState","domainToken","props","history","location","state","bedrooms","bathrooms","max_price","suburb","searchListings","accessToken","console","log","tk","post","headers","then","result","data","propertyResults","catch","err","error","response","componentWillMount","componentDidMount","render","length","map","p","listing","id","propertyDetails","displayableAddress","media","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass SearchedShowListings extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      propertyResults: '',\n      domainToken: ''\n    }\n  }\n\n  // Method to pull data passed down when we routed to the state\n  updateState = () => {\n    this.setState({\n      domainToken: this.props.history.location.state.domainToken,\n      bedrooms: this.props.history.location.state.bedrooms,\n      bathrooms: this.props.history.location.state.bathrooms,\n      max_price: this.props.history.location.state.max_price,\n      suburb: this.props.history.location.state.suburb\n    })\n  }\n\n  // Updates the state before any HTML is rendered\n  componentWillMount() {\n    this.updateState()\n  }\n\n\n  componentDidMount() {\n    this.searchListings(this.state.domainToken)\n  }\n\n  // Query the Domain Database based on search critera\n  searchListings = (accessToken) => {\n    console.log(`the access token is: ${accessToken}`);\n    const tk = this.state.domainToken;\n    console.log(`tk isssss: ${tk}`);\n  return axios.post(`https://api.domain.com.au/v1/listings/residential/_search`,\n    {\n      \"minBedrooms\": this.state.bedrooms,\n      \"minBathrooms\": this.state.bathrooms,\n      \"maxPrice\": this.state.max_price,\n      \"locations\": [\n        {\n          \"suburb\": this.state.suburb,\n        }\n      ],\n    },\n    {\n        headers: {\n            'Authorization': `Bearer ${accessToken}`,\n        }\n    }).then(result => {\n        const { data } = result;\n        console.log('hello array: searchedShowListings', data);\n        this.setState({propertyResults: data})\n        // this.props.selectedPropCallBack(data)\n    }).catch(err => console.error(err.response.data))\n  } // end of searchListing\n\n\n  render() {\n\n    return(\n\n      <div className=\"component\">\n\n      <h1>Listings</h1>\n\n        <div>\n          {\n            this.state.propertyResults.length > 0\n            ?\n            this.state.propertyResults.map( p =>\n              <Link to={`/listing/${p.listing.id}`}>\n                <div className='listings'>\n                  <div key={p.listing.id} className='listings-left'>\n                    {p.listing.propertyDetails.displayableAddress}\n                  </div><div className='listings-right'>\n                    <img src={p.listing.media[0].url} ></img>\n                    </div>\n                  <br></br>\n                </div>\n              </Link>\n            )\n\n           :\n           <p>Loading...</p>\n          }\n        </div>\n\n      </div>\n\n    )\n  }\n}\n\nexport default SearchedShowListings\n"]},"metadata":{},"sourceType":"module"}