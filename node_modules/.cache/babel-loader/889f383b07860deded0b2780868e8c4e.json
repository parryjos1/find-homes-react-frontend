{"ast":null,"code":"var _jsxFileName = \"/Users/joshparry/sei/projects/project-2/react-frontend-project2/project2-frontend/src/components/DisplayProperties.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass DisplayProperties extends Component {\n  constructor() {\n    super();\n\n    this.searchListings = accessToken => {\n      console.log(\"the polygon is: \".concat(this.props.polygonDrawn));\n      return axios.post(\"https://api.domain.com.au/v1/listings/residential/_search\", {\n        \"listingType\": \"Sale\",\n        \"minBedrooms\": this.props.bedrooms,\n        \"minBathrooms\": this.props.bathrooms,\n        \"maxPrice\": this.props.maxPrice,\n        \"geoWindow\": {\n          \"polygon\": {\n            \"points\": this.props.polygonDrawn\n          }\n        }\n      }, {\n        headers: {\n          'Authorization': \"Bearer \".concat(accessToken)\n        }\n      }).then(result => {\n        const data = result.data;\n        console.log('hello array:', data);\n        this.setState({\n          propertyResults: data\n        });\n        this.props.selectedPropCallBack(data);\n      }).catch(err => console.error(err.response.data));\n    };\n\n    this.state = {\n      showComponent: false,\n      propertyResults: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"the polygon token is: this: \".concat(this.props.polygonDrawn));\n    console.log(\"the domain token is: this: \".concat(this.props.domainToken['data'])); // Access the domain token that was loaded in the MapContainer Component\n    // and passed down from MapComponent State as domainToken\n\n    const accessToken = this.props.domainToken['data']; // Run function that queries Domain API for properties\n\n    this.searchListings(accessToken); // console.log(`The this.propertyResultsis: ${this.propertyResults} `);\n    // this.props.selectedPropCallBack(this.propertyResults)\n  }\n\n  // end of searchListing\n  render() {\n    return React.createElement(\"div\", {\n      className: \"component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.propertyResults.length > 0 ? this.state.propertyResults.map(p => React.createElement(Link, {\n      to: \"/listing/\".concat(p.listing.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"listings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: p.listing.id,\n      className: \"listings-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, p.listing.propertyDetails.displayableAddress), React.createElement(\"div\", {\n      className: \"listings-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: p.listing.media[0].url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"propertyResults is still empty\"));\n  }\n\n}\n\nexport default DisplayProperties;","map":{"version":3,"sources":["/Users/joshparry/sei/projects/project-2/react-frontend-project2/project2-frontend/src/components/DisplayProperties.jsx"],"names":["React","Component","Link","axios","DisplayProperties","constructor","searchListings","accessToken","console","log","props","polygonDrawn","post","bedrooms","bathrooms","maxPrice","headers","then","result","data","setState","propertyResults","selectedPropCallBack","catch","err","error","response","state","showComponent","componentDidMount","domainToken","render","length","map","p","listing","id","propertyDetails","displayableAddress","media","url"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nclass DisplayProperties extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      showComponent: false,\n      propertyResults: '',\n    }\n  }\n\n  componentDidMount() {\n\n    console.log(`the polygon token is: this: ${this.props.polygonDrawn}`);\n    console.log(`the domain token is: this: ${this.props.domainToken['data']}`);\n\n    // Access the domain token that was loaded in the MapContainer Component\n    // and passed down from MapComponent State as domainToken\n    const accessToken = this.props.domainToken['data']\n\n    // Run function that queries Domain API for properties\n    this.searchListings(accessToken);\n\n\n    // console.log(`The this.propertyResultsis: ${this.propertyResults} `);\n    // this.props.selectedPropCallBack(this.propertyResults)\n\n\n  }\n\n  searchListings = (accessToken) => {\n      console.log(`the polygon is: ${this.props.polygonDrawn}`);\n  return axios.post(`https://api.domain.com.au/v1/listings/residential/_search`,\n  {\n      \"listingType\": \"Sale\",\n      \"minBedrooms\": this.props.bedrooms,\n      \"minBathrooms\": this.props.bathrooms,\n      \"maxPrice\": this.props.maxPrice,\n      \"geoWindow\": {\n\n        \"polygon\": {\n          \"points\":\n            this.props.polygonDrawn\n\n        }\n      },\n\n    },\n    {\n        headers: {\n            'Authorization': `Bearer ${accessToken}`,\n        }\n    }).then(result => {\n        const { data } = result;\n        console.log('hello array:', data);\n        this.setState({propertyResults: data})\n        this.props.selectedPropCallBack(data)\n    }).catch(err => console.error(err.response.data))\n  } // end of searchListing\n\n\n  render() {\n\n\n    return(\n\n      <div className=\"component\">\n        {\n          this.state.propertyResults.length > 0\n          ?\n          this.state.propertyResults.map( p =>\n            <Link to={`/listing/${p.listing.id}`}>\n              <div className='listings'>\n                <div key={p.listing.id} className='listings-left'>\n                  {p.listing.propertyDetails.displayableAddress}\n                </div><div className='listings-right'>\n                  <img src={p.listing.media[0].url} ></img>\n                  </div>\n                <br></br>\n              </div>\n            </Link>\n          )\n\n         :\n         <p>propertyResults is still empty</p>\n        }\n      </div>\n\n    )\n  }\n}\n\nexport default DisplayProperties\n"]},"metadata":{},"sourceType":"module"}